##### ANTIDOTE #####
# These should be set before plugins are loaded
# Add ~/.zsh_custom/completions to fpath
export FPATH=$HOME/.zsh_custom/completions:$FPATH
# Set XDG base directories
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_STATE_HOME="$HOME/.local/state"
# Load antidote
source $HOME/.antidote/antidote.zsh
antidote load

##### MANUAL INTEGRATIONS #####
# Initialize homebrew
if type brew &>/dev/null; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
  # Setup zsh-completions for homebrew
  FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
fi

# Initialize zoxide
if command -v zoxide &>/dev/null; then
  eval "$(zoxide init zsh)"
fi

# Initialize pyenv
if command -v pyenv &>/dev/null; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
fi

# Initialize frum, ruby version manager
if command -v frum &>/dev/null; then
  eval "$(frum init)"
fi

# FZF integration
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# zsh-autocomplete fuzzy completion
zstyle ':completion:*' completer _expand _complete _complete:-loose _complete:-fuzzy _ignored
zstyle ':autocomplete:*' min-input 1
# zsh-autocomplete tab through completions
bindkey '\t' menu-select "$terminfo[kcbt]" menu-select
bindkey -M menuselect '\t' menu-complete "$terminfo[kcbt]" reverse-menu-complete

{{ if eq .chezmoi.os "darwin" -}}
# Wezterm shell integration
# This is only automatically installed via brew on MacOS
if [ -f /Applications/Wezterm.app/Contents/Resources/wezterm.sh ]; then
  source "/Applications/WezTerm.app/Contents/Resources/wezterm.sh"
fi
{{ end }}

# iTerm2 shell integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

##### CUSTOM KEYBINDS #####
# Ensure emacs-like keybinds for editing commands
bindkey -e

# Edit the current command line in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

##### ALIASES/SHORTCUTS #####
# Aliases for eza
if command -v eza &>/dev/null; then
  alias es="eza --icons=auto"
  alias esa="eza -a --icons=auto"
  alias e="eza -lha --git --git-repos --icons=auto"
  alias et="eza --icons=auto --tree"
  alias etl="eza -lh --git --git-repos --icons=auto --tree"
  alias eta="eza -lha --git --git-repos --icons=auto --tree"
fi
# Quicker NeoVim Command
alias nv="nvim"
# Quicker LazyGit command
alias lg="lazygit"
# Quicker Chezmoi command
alias ch="chezmoi"
# Quicker Himalaya command
alias hi="himalaya"
# Make with more jobs
if command -v nproc &>/dev/null; then
  alias makej="make -j$(nproc --ignore=2)"
  alias makep="make -j$(nproc)"
fi
# Skim with ripgrep
alias skrg="sk --ansi -i -c 'rg --color=always --line-number \"{}\"'"
alias skrgu="sk --ansi -i -c 'rg --color=always --line-number -u \"{}\"'"
alias skrguu="sk --ansi -i -c 'rg --color=always --line-number -uu \"{}\"'"
alias skrguuu="sk --ansi -i -c 'rg --color=always --line-number -uuu \"{}\"'"
# this is fucking stupid
alias itllbeok="mpv https://www.youtube.com/watch\?v\=uH2Ns9Tewpo -vo tct --profile=sw-fast"
alias kikuri="chafa ~/.config/kikuri.gif --size \$COLUMNSx\$LINES"
alias hiroi="kikuri --speed 5"
# Download YT videos/audio
alias yt-vid="yt-dlp -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best'" # Best quality video available
alias yt-aud="yt-dlp -x -f 'bestaudio[ext=m4a]' --embed-thumbnail" # Downloads audio only, in m4a, and embeds the video thumbnail as cover art
alias yt-1080="yt-dlp -f 'bestvideo[height<=1080][ext=mp4]+bestaudio/best[height<=1080][ext=m4a]'"
# Alias to recursively remove .DS_Store files
alias rmdsstore="find . -name ".DS_Store" -delete"
# Yazi wrapper from https://yazi-rs.github.io/docs/quick-start/
function y() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
    cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}


##### OS-SPECIFIC CONFIGURATION #####
{{ if eq .chezmoi.os "darwin" -}}
# MACOS
{{  if eq .chezmoi.arch "arm64" -}}
# ARM ONLY
# Switch between ARM brew and x86 brew
alias armbrew='eval "$(/opt/homebrew/bin/brew shellenv)"'
alias x86brew='eval "$(/usr/local/homebrew/bin/brew shellenv)"'
# ARM END
{{  end }}

# Set JAVA_HOME
export JAVA_HOME="$(brew --prefix openjdk)/libexec/openjdk.jdk/Contents/Home/"

# Mackup location
export MACKUP_LOCATION="$HOME/Library/Mobile Documents/com~apple~CloudDocs/Mackup"
# MACOS END
{{ end }}

##### EXPORT #####
# Set default editor to nvim instead of vim
export EDITOR=nvim

# Add ~/.local/bin to PATH
export PATH=$HOME/.local/bin:$PATH

# Add Doom Emacs to path
export PATH=$HOME/.config/emacs/bin:$PATH

# Go stuff
export GOPATH="$HOME/.go"
export PATH="$GOPATH/bin:$PATH"

# Cmake export compile commands by default
export CMAKE_EXPORT_COMPILE_COMMANDS=1

##### pretty :) #####
# Setup starship
if command -v starship &>/dev/null; then
  eval "$(starship init zsh)"
fi

# Pretty screen when opening terminal
fastfetch
